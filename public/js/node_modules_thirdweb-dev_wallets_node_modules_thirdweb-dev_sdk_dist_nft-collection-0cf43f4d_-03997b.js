"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_thirdweb-dev_wallets_node_modules_thirdweb-dev_sdk_dist_nft-collection-0cf43f4d_-03997b"],{

/***/ "./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-c858f30e.browser.esm.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-c858f30e.browser.esm.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: () => (/* binding */ StandardErc721)\n/* harmony export */ });\n/* harmony import */ var _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contract-publisher-1ff1fe07.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/contract-publisher-1ff1fe07.browser.esm.js\");\n\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.transfer(walletAddress, tokenId);\n * ```\n * @public\n */\nclass StandardErc721 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc721 = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aD(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc721.getAll(queryParams);\n  }\n\n  /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress) {\n    if (walletAddress) {\n      walletAddress = await (0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.cL)(walletAddress);\n    }\n    return this.erc721.getOwned(walletAddress);\n  }\n\n  /**\n   * Get Owned Token Ids\n   * @remarks Get all the token ids of NFTs owned by a specific wallet (no metadata)\n   */\n  async getOwnedTokenIds(walletAddress) {\n    if (walletAddress) {\n      walletAddress = await (0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.cL)(walletAddress);\n    }\n    return this.erc721.getOwnedTokenIds(walletAddress);\n  }\n\n  /**\n   * Get total minted supply count\n   */\n  async totalSupply() {\n    return this.erc721.totalCirculatingSupply();\n  }\n\n  /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc721.get(tokenId);\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns the address of the owner\n   */\n  async ownerOf(tokenId) {\n    return this.erc721.ownerOf(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */\n  async balanceOf(address) {\n    return this.erc721.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance() {\n    return this.erc721.balance();\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc721.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.dx)(async (to, tokenId) => {\n    return this.erc721.transfer.prepare(to, tokenId);\n  });\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  setApprovalForAll = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.dx)(async (operator, approved) => {\n    return this.erc721.setApprovalForAll.prepare(operator, approved);\n  });\n\n  /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */\n  setApprovalForToken = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.dx)(async (operator, tokenId) => {\n    return _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aW.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"approve\",\n      args: [await (0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.cL)(operator), tokenId]\n    });\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-c858f30e.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/nft-collection-0cf43f4d.browser.esm.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/nft-collection-0cf43f4d.browser.esm.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NFTCollection: () => (/* binding */ NFTCollection)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/constants/lib.esm/addresses.js\");\n/* harmony import */ var _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-publisher-1ff1fe07.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/contract-publisher-1ff1fe07.browser.esm.js\");\n/* harmony import */ var _erc_721_standard_c858f30e_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./erc-721-standard-c858f30e.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-c858f30e.browser.esm.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a collection of one-of-one NFTs.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"nft-collection\");\n * ```\n *\n * @public\n */\nclass NFTCollection extends _erc_721_standard_c858f30e_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.S {\n  static contractRoles = _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dK;\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature().generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n\n  /**\n   * @internal\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dw(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e.parse(abi || []);\n    this.metadata = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ah(this.contractWrapper, _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dV, this.storage);\n    this.app = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.b0(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ai(this.contractWrapper, NFTCollection.contractRoles);\n    this.royalties = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aj(this.contractWrapper, this.metadata);\n    this.sales = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ak(this.contractWrapper);\n    this.encoder = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ag(this.contractWrapper);\n    this.estimator = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aQ(this.contractWrapper);\n    this.events = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aR(this.contractWrapper);\n    this.platformFees = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aT(this.contractWrapper);\n    this.interceptor = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aS(this.contractWrapper);\n    this.signature = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aE(this.contractWrapper, this.storage);\n    this.owner = new _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV(this.contractWrapper);\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bI)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_9__.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint a unique NFT\n   *\n   * @remarks Mint a unique NFT to a specified wallet.\n   *\n   * @example\n   * ```javascript*\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const tx = await contract.mint(metadata);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  mint = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dx)(async metadata => {\n    return this.erc721.mint.prepare(metadata);\n  });\n\n  /**\n   * Mint a unique NFT\n   *\n   * @remarks Mint a unique NFT to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const walletAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const tx = await contract.mintTo(walletAddress, metadata);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  mintTo = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dx)(async (walletAddress, metadata) => {\n    return this.erc721.mintTo.prepare(walletAddress, metadata);\n  });\n\n  /**\n   * Construct a mint transaction without executing it.\n   * This is useful for estimating the gas cost of a mint transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param receiver - Address you want to send the token to\n   * @param metadata - The metadata of the NFT you want to mint\n   *\n   * @deprecated Use `contract.mint.prepare(...args)` instead\n   */\n  async getMintTransaction(receiver, metadata) {\n    return this.erc721.getMintTransaction(receiver, metadata);\n  }\n\n  /**\n   * Mint Many unique NFTs\n   *\n   * @remarks Mint many unique NFTs at once to the connected wallet\n   *\n   * @example\n   * ```javascript*\n   * // Custom metadata of the NFTs you want to mint.\n   * const metadatas = [{\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT #2\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/other/image.png\"),\n   * }];\n   *\n   * const tx = await contract.mintBatch(metadatas);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  mintBatch = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dx)(async metadata => {\n    return this.erc721.mintBatch.prepare(metadata);\n  });\n\n  /**\n   * Mint Many unique NFTs\n   *\n   * @remarks Mint many unique NFTs at once to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const walletAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFTs you want to mint.\n   * const metadatas = [{\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT #2\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/other/image.png\"),\n   * }];\n   *\n   * const tx = await contract.mintBatchTo(walletAddress, metadatas);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  mintBatchTo = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dx)(async (walletAddress, metadata) => {\n    return this.erc721.mintBatchTo.prepare(walletAddress, metadata);\n  });\n\n  /**\n   * Burn a single NFT\n   * @param tokenId - the token Id to burn\n   *\n   * @example\n   * ```javascript\n   * const result = await contract.burnToken(tokenId);\n   * ```\n   */\n  burn = /* @__PURE__ */(0,_contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dx)(tokenId => {\n    return this.erc721.burn.prepare(tokenId);\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _contract_publisher_1ff1fe07_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aW.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/wallets/node_modules/@thirdweb-dev/sdk/dist/nft-collection-0cf43f4d.browser.esm.js\n");

/***/ })

}]);