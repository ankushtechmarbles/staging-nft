"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6457],{4646:(t,e,i)=>{function n(t){return"string"==typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"==typeof t?Number(t):t}i.d(e,{n:()=>n})},76457:(t,e,i)=>{i.d(e,{EmbeddedWalletConnector:()=>l});var n=i(16074),s=i(42009),a=i(19485),r=i(20722),o=i(27021),h=i(4646),c=i(58142),u=(i(54146),new WeakMap),d=new WeakMap;class l extends o.C{constructor(t){super(),(0,s._)(this,"id",r.w.paper),(0,s._)(this,"name","Embedded Wallet"),(0,s._)(this,"ready",!0),(0,s._)(this,"user",null),(0,n._)(this,u,{writable:!0,value:void 0}),(0,n._)(this,d,{writable:!0,value:void 0}),(0,s._)(this,"onAccountsChanged",(async t=>{0===t.length?await this.onDisconnect():this.emit("change",{account:a.getAddress(t[0])})})),(0,s._)(this,"onChainChanged",(t=>{const e=(0,h.n)(t),i=-1===this.options.chains.findIndex((t=>t.chainId===e));this.emit("change",{chain:{id:e,unsupported:i}})})),(0,s._)(this,"onDisconnect",(async()=>{this.emit("disconnect")})),this.options=t}getEmbeddedWalletSDK(){return(0,n.b)(this,u)||(0,n.a)(this,u,new c.E({clientId:this.options.clientId,chain:"Ethereum",onAuthSuccess:this.options.onAuthSuccess})),(0,n.b)(this,u)}async connect(t){if(t){if(!t.authResult)throw new Error("Missing authData - call authenticate() first with your authentication strategy");if(!t.authResult.user)throw new Error("Missing authData.user - call authenticate() first with your authentication strategy");this.user=t.authResult.user}else{const t=await this.authenticate({strategy:"iframe"});if(!t.user)throw new Error("Error connecting User");this.user=t.user}return t?.chainId&&this.switchChain(t.chainId),this.getAddress()}async disconnect(){const t=(0,n.b)(this,u);await(t?.auth.logout()),(0,n.a)(this,d,void 0),(0,n.a)(this,u,void 0),this.user=null}async getAddress(){if(!this.user)throw new Error("Embedded Wallet is not connected");return await this.getSigner().then((t=>t.getAddress()))}async isConnected(){try{return!!await this.getAddress()}catch(t){return!1}}async getProvider(){const t=await this.getSigner();if(!t.provider)throw new Error("Provider not found");return t.provider}async getSigner(){if((0,n.b)(this,d))return(0,n.b)(this,d);const t=await this.getUser(),e=await t.wallet.getEthersJsSigner({rpcEndpoint:this.options.chain.rpc[0]||""});if(!e)throw new Error("Signer not found");return(0,n.a)(this,d,e),e}async isAuthorized(){return!1}async switchChain(t){const e=this.options.chains.find((e=>e.chainId===t));if(!e)throw new Error("Chain not configured");try{await(this.user?.wallet.setChain({chain:"Ethereum"})),(0,n.a)(this,d,await(this.user?.wallet.getEthersJsSigner({rpcEndpoint:e.rpc[0]||""}))),this.emit("change",{chain:{id:t,unsupported:!1}})}catch(t){console.warn("Failed to switch chain",t)}}async setupListeners(){return Promise.resolve()}updateChains(t){this.options.chains=t}async getUser(){if(!this.user||!this.user.wallet||!this.user.wallet.getEthersJsSigner){const t=this.getEmbeddedWalletSDK(),e=await t.getUser();if(e.status!==c.U.LOGGED_IN_WALLET_INITIALIZED)throw new Error("Embedded Wallet is not authenticated, please authenticate first");this.user=e}return this.user}async getEmail(){return(await this.getUser()).authDetails.email}async getRecoveryInformation(){return(await this.getUser()).authDetails}async sendVerificationEmail(t){let{email:e}=t;return this.getEmbeddedWalletSDK().auth.sendEmailLoginOtp({email:e})}async authenticate(t){const e=this.getEmbeddedWalletSDK(),i=t.strategy;switch(i){case"email_verification":return await e.auth.verifyEmailLoginOtp({email:t.email,otp:t.verificationCode,recoveryCode:t.recoveryCode});case"apple":case"facebook":case"google":{const n=w[i];return e.auth.loginWithOauth({oauthProvider:n,closeOpenedWindow:t.closeOpenedWindow,openedWindow:t.openedWindow})}case"jwt":return e.auth.loginWithCustomJwt({jwt:t.jwt,encryptionKey:t.encryptionKey});case"iframe_email_verification":return e.auth.loginWithEmailOtp({email:t.email});case"iframe":case void 0:return e.auth.loginWithModal();default:!function(t){throw new Error("Invalid param: "+t)}(i)}}}const w={google:c.c.GOOGLE,facebook:c.c.FACEBOOK,apple:c.c.APPLE}}}]);
//# sourceMappingURL=6457.js.map