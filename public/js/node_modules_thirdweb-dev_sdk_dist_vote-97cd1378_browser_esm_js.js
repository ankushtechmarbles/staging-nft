"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_thirdweb-dev_sdk_dist_vote-97cd1378_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/vote-97cd1378.browser.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/vote-97cd1378.browser.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Vote: () => (/* binding */ Vote)\n/* harmony export */ });\n/* harmony import */ var _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contract-publisher-8c26151b.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-publisher-8c26151b.browser.esm.js\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/hash/lib.esm/id.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/units/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _Vote_3b66775c_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Vote-3b66775c.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/Vote-3b66775c.browser.esm.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a decentralized organization for token holders to vote on proposals.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"vote\");\n * ```\n *\n * @public\n */\nclass Vote {\n  /**\n   * @internal\n   */\n\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.dm(network, address, abi, options, storage);\n    this._chainId = chainId;\n    this.abi = _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.e.parse(abi || []);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.ah(this.contractWrapper, _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.dW, this.storage);\n    this.app = new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.b0(this.contractWrapper, this.metadata, this.storage);\n    this.encoder = new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.ag(this.contractWrapper);\n    this.estimator = new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aQ(this.contractWrapper);\n    this.events = new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aR(this.contractWrapper);\n    this.interceptor = new _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aS(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a proposal by id.\n   *\n   * @param proposalId - The proposal id to get.\n   * @returns - The proposal.\n   */\n  async get(proposalId) {\n    const all = await this.getAll();\n    const proposals = all.filter(p => p.proposalId.eq(ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(proposalId)));\n    if (proposals.length === 0) {\n      throw new Error(\"proposal not found\");\n    }\n    return proposals[0];\n  }\n\n  /**\n   * Get All Proposals\n   *\n   * @remarks Get all the proposals in this contract.\n   *\n   * @example\n   * ```javascript\n   * const proposals = await contract.getAll();\n   * console.log(proposals);\n   * ```\n   *\n   * @returns - All the proposals in the contract.\n   */\n  async getAll() {\n    return Promise.all((await this.contractWrapper.read(\"getAllProposals\", [])).map(async data => ({\n      proposalId: data.proposalId,\n      proposer: data.proposer,\n      description: data.description,\n      startBlock: data.startBlock,\n      endBlock: data.endBlock,\n      state: await this.contractWrapper.readContract.state(data.proposalId),\n      votes: await this.getProposalVotes(data.proposalId),\n      executions: data[3].map((c, i) => ({\n        toAddress: data.targets[i],\n        nativeTokenValue: c,\n        transactionData: data.calldatas[i]\n      }))\n    })));\n  }\n\n  /**\n   * Get the votes for a specific proposal\n   * @param proposalId - the proposalId\n   */\n  async getProposalVotes(proposalId) {\n    const votes = await this.contractWrapper.readContract.proposalVotes(proposalId);\n    return [{\n      type: _Vote_3b66775c_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.V.Against,\n      label: \"Against\",\n      count: votes.againstVotes\n    }, {\n      type: _Vote_3b66775c_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.V.For,\n      label: \"For\",\n      count: votes.forVotes\n    }, {\n      type: _Vote_3b66775c_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.V.Abstain,\n      label: \"Abstain\",\n      count: votes.abstainVotes\n    }];\n  }\n\n  /**\n   * Check If Wallet Voted\n   *\n   * @remarks Check if a specified wallet has voted a specific proposal\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to check\n   * const proposalId = \"0\";\n   * // The address of the wallet you want to check to see if they voted\n   * const address = \"{{wallet_address}}\";\n   *\n   * await contract.hasVoted(proposalId, address);\n   * ```\n   *\n   * @param proposalId - The unique identifier of a proposal .\n   * @param account - (optional) wallet account address. Defaults to connected signer.\n   * @returns - True if the account has already voted on the proposal.\n   */\n  async hasVoted(proposalId, account) {\n    if (!account) {\n      account = await this.contractWrapper.getSignerAddress();\n    }\n    return this.contractWrapper.readContract.hasVoted(proposalId, await (0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.cB)(account));\n  }\n\n  /**\n   * Can Execute\n   *\n   * @remarks Check if a proposal can be executed (if the proposal has succeeded).\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to check\n   * const proposalId = \"0\";\n   * const canExecute = await contract.canExecute(proposalId);\n   * console.log(canExecute);\n   * ```\n   *\n   * @param proposalId - The proposal ID to check.\n   * @returns - True if the proposal can be executed, false otherwise.\n   */\n  async canExecute(proposalId) {\n    await this.ensureExists(proposalId);\n    const proposal = await this.get(proposalId);\n    const tos = proposal.executions.map(p => p.toAddress);\n    const values = proposal.executions.map(p => p.nativeTokenValue);\n    const datas = proposal.executions.map(p => p.transactionData);\n    const descriptionHash = ethers__WEBPACK_IMPORTED_MODULE_10__.id(proposal.description);\n    try {\n      await this.contractWrapper.callStatic().execute(tos, values, datas, descriptionHash);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Check the balance of the project wallet in the native token of the chain\n   *\n   * @returns - The balance of the project in the native token of the chain\n   */\n  async balance() {\n    const balance = await this.contractWrapper.readContract.provider.getBalance(this.contractWrapper.readContract.address);\n    return {\n      name: \"\",\n      symbol: \"\",\n      decimals: 18,\n      value: balance,\n      displayValue: ethers__WEBPACK_IMPORTED_MODULE_11__.formatUnits(balance, 18)\n    };\n  }\n\n  /**\n   * Check the balance of the project wallet in a particular\n   * ERC20 token contract\n   *\n   * @returns - The balance of the project in the native token of the chain\n   */\n  async balanceOfToken(tokenAddress) {\n    const erc20 = new ethers__WEBPACK_IMPORTED_MODULE_12__.Contract(await (0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.cB)(tokenAddress), _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_13__, this.contractWrapper.getProvider());\n    return await (0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.bc)(this.contractWrapper.getProvider(), tokenAddress, await erc20.balanceOf(this.contractWrapper.readContract.address));\n  }\n\n  /**\n   * Find a proposal by its id.\n   *\n   * @internal\n   * @param proposalId - Proposal to check for\n   */\n  async ensureExists(proposalId) {\n    try {\n      await this.contractWrapper.readContract.state(proposalId);\n    } catch (e) {\n      throw Error(`Proposal ${proposalId} not found`);\n    }\n  }\n\n  /**\n   * Get the Vote contract configuration\n   */\n  async settings() {\n    const [votingDelay, votingPeriod, votingTokenAddress, votingQuorumFraction, proposalTokenThreshold] = await Promise.all([this.contractWrapper.readContract.votingDelay(), this.contractWrapper.readContract.votingPeriod(), this.contractWrapper.readContract.token(), this.contractWrapper.readContract[\"quorumNumerator()\"](), this.contractWrapper.readContract.proposalThreshold()]);\n    const votingTokenMetadata = await (0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.bb)(this.contractWrapper.getProvider(), votingTokenAddress);\n    return {\n      votingDelay: votingDelay.toString(),\n      votingPeriod: votingPeriod.toString(),\n      votingTokenAddress,\n      votingTokenMetadata,\n      votingQuorumFraction: votingQuorumFraction.toString(),\n      proposalTokenThreshold: proposalTokenThreshold.toString()\n    };\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Proposal\n   *\n   * @remarks Create a new proposal for token holders to vote on.\n   *\n   * @example\n   * ```javascript\n   * // The description of the proposal you want to pass\n   * const description = \"This is a great proposal - vote for it!\"\n   * // You can (optionally) pass in contract calls that will get executed when the proposal is executed.\n   * const executions = [\n   *   {\n   *     // The contract you want to make a call to\n   *     toAddress: \"0x...\",\n   *     // The amount of the native currency to send in this transaction\n   *     nativeTokenValue: 0,\n   *     // Transaction data that will be executed when the proposal is executed\n   *     // This is an example transfer transaction with a token contract (which you would need to set up in code)\n   *     transactionData: tokenContract.encoder.encode(\n   *       \"transfer\", [\n   *         fromAddress,\n   *         amount,\n   *       ]\n   *     ),\n   *   }\n   * ]\n   *\n   * const proposal = await contract.propose(description, executions);\n   * ```\n   *\n   * @param description - The description of the proposal.\n   * @param executions - A set of executable transactions that will be run if the proposal is passed and executed.\n   * @returns - The id of the created proposal and the transaction receipt.\n   */\n  propose = /* @__PURE__ */(0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.dn)(async (description, executions) => {\n    if (!executions) {\n      executions = [{\n        toAddress: this.contractWrapper.readContract.address,\n        nativeTokenValue: 0,\n        transactionData: \"0x\"\n      }];\n    }\n    const tos = executions.map(p => p.toAddress);\n    const values = executions.map(p => p.nativeTokenValue);\n    const datas = executions.map(p => p.transactionData);\n    return _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aW.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"propose\",\n      args: [tos, values, datas, description],\n      parse: receipt => {\n        const event = this.contractWrapper.parseLogs(\"ProposalCreated\", receipt?.logs);\n        return {\n          id: event[0].args.proposalId,\n          receipt\n        };\n      }\n    });\n  });\n\n  /**\n   * Vote\n   *\n   * @remarks Vote on an active proposal\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to vote on\n   * const proposalId = \"0\";\n   * // The vote type you want to cast, can be VoteType.Against, VoteType.For, or VoteType.Abstain\n   * const voteType = VoteType.For;\n   * // The (optional) reason for the vote\n   * const reason = \"I like this proposal!\";\n   *\n   * await contract.vote(proposalId, voteType, reason);\n   * ```\n   * @param proposalId - The proposal to cast a vote on.\n   * @param voteType - The position the voter is taking on their vote.\n   * @param reason - (optional) The reason for the vote.\n   */\n  vote = /* @__PURE__ */(0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.dn)((() => {\n    var _this = this;\n    return async function (proposalId, voteType) {\n      let reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n      await _this.ensureExists(proposalId);\n      return _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aW.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"castVoteWithReason\",\n        args: [proposalId, voteType, reason]\n      });\n    };\n  })());\n\n  /**\n   * Execute Proposal\n   *\n   * @remarks Execute the related transactions for a proposal if the proposal succeeded.\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to execute\n   * const proposalId = \"0\"\n   * await contract.execute(proposalId);\n   * ```\n   *\n   * @param proposalId - The proposal id to execute.\n   */\n  execute = /* @__PURE__ */(0,_contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.dn)(async proposalId => {\n    await this.ensureExists(proposalId);\n    const proposal = await this.get(proposalId);\n    const tos = proposal.executions.map(p => p.toAddress);\n    const values = proposal.executions.map(p => p.nativeTokenValue);\n    const datas = proposal.executions.map(p => p.transactionData);\n    const descriptionHash = ethers__WEBPACK_IMPORTED_MODULE_10__.id(proposal.description);\n    return _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aW.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"execute\",\n      args: [tos, values, datas, descriptionHash]\n    });\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _contract_publisher_8c26151b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.aW.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9zZGsvZGlzdC92b3RlLTk3Y2QxMzc4LmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZZO0FBQ3JVO0FBQ3BCO0FBQ1c7QUFDaEI7QUFDaEM7QUFDRjtBQUNrQjtBQUNQO0FBQzBDO0FBQzVDO0FBQ0c7QUFDWDtBQUM2QztBQUNRO0FBQ0M7QUFDUTtBQUNQO0FBQ1Y7QUFDQztBQUM5QjtBQUNoQjtBQUMrRDtBQUNYO0FBQ1Q7QUFDUTtBQUNHO0FBQ0c7QUFDUDtBQUNFO0FBQ0o7QUFDUztBQUNKO0FBQ0M7QUFDRjtBQUNBO0FBQ0c7QUFDVztBQUNmO0FBQ0o7QUFDTTtBQUNLO0FBQ0c7QUFDUDtBQUNGO0FBQ0U7QUFDSjtBQUNBO0FBQ0k7QUFDQztBQUNSO0FBQ007QUFDSztBQUNHO0FBQ1Q7QUFDSTtBQUNGO0FBQ0s7QUFDTjtBQUNSO0FBQ1U7QUFDRjtBQUNDO0FBQ1Q7QUFDTztBQUNGO0FBQ1U7QUFDVjtBQUNBO0FBQ0o7QUFDRDtBQUNNO0FBQ0M7QUFDQztBQUNBO0FBQ0k7QUFDWDtBQUNsQztBQUNtQztBQUN4QztBQUNnRDtBQUM5Qzs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0Esa0NBQWtDLFdBQVc7QUFDN0MsNkNBQTZDLGtCQUFrQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0dBQWtHLDJFQUFlO0FBQ2pIO0FBQ0EsZUFBZSwwRUFBUztBQUN4QjtBQUNBO0FBQ0Esd0JBQXdCLDJFQUFnQix1QkFBdUIsMkVBQWtCO0FBQ2pGLG1CQUFtQiwyRUFBYztBQUNqQyx1QkFBdUIsMkVBQWU7QUFDdEMseUJBQXlCLDJFQUFnQjtBQUN6QyxzQkFBc0IsMkVBQWM7QUFDcEMsMkJBQTJCLDJFQUFtQjtB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QTtBQUNBLDRCQUE0Qix1Q0FBUTtBQUNwQyxXQUFXLDJFQUFXO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyRUFBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9zZGsvZGlzdC92b3RlLTk3Y2QxMzc4LmJyb3dzZXIuZXNtLmpzPzQxOTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZG0gYXMgQ29udHJhY3RXcmFwcGVyLCBlIGFzIEFiaVNjaGVtYSwgYWggYXMgQ29udHJhY3RNZXRhZGF0YSwgZFcgYXMgVm90ZUNvbnRyYWN0U2NoZW1hLCBiMCBhcyBDb250cmFjdEFwcFVSSSwgYWcgYXMgQ29udHJhY3RFbmNvZGVyLCBhUSBhcyBHYXNDb3N0RXN0aW1hdG9yLCBhUiBhcyBDb250cmFjdEV2ZW50cywgYVMgYXMgQ29udHJhY3RJbnRlcmNlcHRvciwgY0IgYXMgcmVzb2x2ZUFkZHJlc3MsIGJjIGFzIGZldGNoQ3VycmVuY3lWYWx1ZSwgYmIgYXMgZmV0Y2hDdXJyZW5jeU1ldGFkYXRhLCBkbiBhcyBidWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24sIGFXIGFzIFRyYW5zYWN0aW9uIH0gZnJvbSAnLi9jb250cmFjdC1wdWJsaXNoZXItOGMyNjE1MWIuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IEVSQzIwQWJpIGZyb20gJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjAuanNvbic7XG5pbXBvcnQgeyBCaWdOdW1iZXIsIHV0aWxzLCBDb250cmFjdCB9IGZyb20gJ2V0aGVycyc7XG5pbXBvcnQgeyBWIGFzIFZvdGVUeXBlIH0gZnJvbSAnLi9Wb3RlLTNiNjY3NzVjLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCAnLi9RdWVyeVBhcmFtcy0zOWJjYWQ3YS5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJ2JuLmpzJztcbmltcG9ydCAnem9kJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9zdG9yYWdlJztcbmltcG9ydCAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzIwTWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ21lcmtsZXRyZWVqcyc7XG5pbXBvcnQgJ2Zhc3QtZGVlcC1lcXVhbCc7XG5pbXBvcnQgJ3V1aWQnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzE2NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjFNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMxMTU1TWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRGVsYXllZFJldmVhbERlcHJlY2F0ZWQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JVGhpcmR3ZWJDb250cmFjdC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jaGFpbnMnO1xuaW1wb3J0ICdiczU4JztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL1RXTXVsdGljaGFpblJlZ2lzdHJ5TG9naWMuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQnVybmFibGVFUkMyMC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BFUkMyMF9WMi5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wU2luZ2xlUGhhc2UuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcFNpbmdsZVBoYXNlX1YxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzIwUGVybWl0Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU1pbnRhYmxlRVJDMjAuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTXVsdGljYWxsLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVNpZ25hdHVyZU1pbnRFUkMyMC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lCdXJuYWJsZUVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lDbGFpbWFibGVFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRGVsYXllZFJldmVhbC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wRVJDNzIxX1YzLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzcyMUVudW1lcmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDNzIxQVF1ZXJ5YWJsZVVwZ3JhZGVhYmxlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzcyMVN1cHBseS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lMYXp5TWludC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lNaW50YWJsZUVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lTaWduYXR1cmVNaW50RVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVNpZ25hdHVyZU1pbnRFUkM3MjFfVjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9MYXp5TWludFdpdGhUaWVyLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvU2hhcmVkTWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy96b3JhX0lFUkM3MjFEcm9wLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUxveWFsdHlDYXJkLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU5GVE1ldGFkYXRhLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUJ1cm5hYmxlRVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lDbGFpbWFibGVFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3AxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BFUkMxMTU1X1YyLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BTaW5nbGVQaGFzZTExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcFNpbmdsZVBoYXNlMTE1NV9WMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMxMTU1U3VwcGx5Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzExNTVFbnVtZXJhYmxlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU1pbnRhYmxlRVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lTaWduYXR1cmVNaW50RVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMyNzcxQ29udGV4dC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBcHBVUkkuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQ29udHJhY3RNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEaXJlY3RMaXN0aW5ncy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFbmdsaXNoQXVjdGlvbnMuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JT2ZmZXJzLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVBhY2tWUkZEaXJlY3QuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUGVybWlzc2lvbnMuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUGVybWlzc2lvbnNFbnVtZXJhYmxlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVBsYXRmb3JtRmVlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVByaW1hcnlTYWxlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVJveWFsdHkuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9Pd25hYmxlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFpcmRyb3BFUkMyMC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBaXJkcm9wRVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFpcmRyb3BFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFjY291bnRGYWN0b3J5Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFjY291bnRQZXJtaXNzaW9ucy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBY2NvdW50Lmpzb24nO1xuaW1wb3J0ICdldGhlcnMvbGliL3V0aWxzJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0ZvcndhcmRlci5qc29uJztcbmltcG9ydCAnY3Jvc3MtZmV0Y2gnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvQ29udHJhY3RQdWJsaXNoZXIuanNvbic7XG5pbXBvcnQgJ2V2ZW50ZW1pdHRlcjMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIGRlY2VudHJhbGl6ZWQgb3JnYW5pemF0aW9uIGZvciB0b2tlbiBob2xkZXJzIHRvIHZvdGUgb24gcHJvcG9zYWxzLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgVGhpcmR3ZWJTREsgfSBmcm9tIFwiQHRoaXJkd2ViLWRldi9zZGtcIjtcbiAqXG4gKiBjb25zdCBzZGsgPSBuZXcgVGhpcmR3ZWJTREsoXCJ7e2NoYWluTmFtZX19XCIpO1xuICogY29uc3QgY29udHJhY3QgPSBhd2FpdCBzZGsuZ2V0Q29udHJhY3QoXCJ7e2NvbnRyYWN0X2FkZHJlc3N9fVwiLCBcInZvdGVcIik7XG4gKiBgYGBcbiAqXG4gKiBAcHVibGljXG4gKi9cbmNsYXNzIFZvdGUge1xuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuXG4gIGdldCBjaGFpbklkKCkge1xuICAgIHJldHVybiB0aGlzLl9jaGFpbklkO1xuICB9XG4gIGNvbnN0cnVjdG9yKG5ldHdvcmssIGFkZHJlc3MsIHN0b3JhZ2UpIHtcbiAgICBsZXQgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDoge307XG4gICAgbGV0IGFiaSA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ID8gYXJndW1lbnRzWzRdIDogdW5kZWZpbmVkO1xuICAgIGxldCBjaGFpbklkID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgPyBhcmd1bWVudHNbNV0gOiB1bmRlZmluZWQ7XG4gICAgbGV0IGNvbnRyYWN0V3JhcHBlciA9IGFyZ3VtZW50cy5sZW5ndGggPiA2ICYmIGFyZ3VtZW50c1s2XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzZdIDogbmV3IENvbnRyYWN0V3JhcHBlcihuZXR3b3JrLCBhZGRyZXNzLCBhYmksIG9wdGlvbnMsIHN0b3JhZ2UpO1xuICAgIHRoaXMuX2NoYWluSWQgPSBjaGFpbklkO1xuICAgIHRoaXMuYWJpID0gQWJpU2NoZW1hLnBhcnNlKGFiaSB8fCBbXSk7XG4gICAgdGhpcy5jb250cmFjdFdyYXBwZXIgPSBjb250cmFjdFdyYXBwZXI7XG4gICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZTtcbiAgICB0aGlzLm1ldGFkYXRhID0gbmV3IENvbnRyYWN0TWV0YWRhdGEodGhpcy5jb250cmFjdFdyYXBwZXIsIFZvdGVDb250cmFjdFNjaGVtYSwgdGhpcy5zdG9yYWdlKTtcbiAgICB0aGlzLmFwcCA9IG5ldyBDb250cmFjdEFwcFVSSSh0aGlzLmNvbnRyYWN0V3JhcHBlciwgdGhpcy5tZXRhZGF0YSwgdGhpcy5zdG9yYWdlKTtcbiAgICB0aGlzLmVuY29kZXIgPSBuZXcgQ29udHJhY3RFbmNvZGVyKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmVzdGltYXRvciA9IG5ldyBHYXNDb3N0RXN0aW1hdG9yKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmV2ZW50cyA9IG5ldyBDb250cmFjdEV2ZW50cyh0aGlzLmNvbnRyYWN0V3JhcHBlcik7XG4gICAgdGhpcy5pbnRlcmNlcHRvciA9IG5ldyBDb250cmFjdEludGVyY2VwdG9yKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgfVxuICBvbk5ldHdvcmtVcGRhdGVkKG5ldHdvcmspIHtcbiAgICB0aGlzLmNvbnRyYWN0V3JhcHBlci51cGRhdGVTaWduZXJPclByb3ZpZGVyKG5ldHdvcmspO1xuICB9XG4gIGdldEFkZHJlc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udHJhY3RXcmFwcGVyLmFkZHJlc3M7XG4gIH1cblxuICAvKiogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAqIFJFQUQgRlVOQ1RJT05TXG4gICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gIC8qKlxuICAgKiBHZXQgYSBwcm9wb3NhbCBieSBpZC5cbiAgICpcbiAgICogQHBhcmFtIHByb3Bvc2FsSWQgLSBUaGUgcHJvcG9zYWwgaWQgdG8gZ2V0LlxuICAgKiBAcmV0dXJucyAtIFRoZSBwcm9wb3NhbC5cbiAgICovXG4gIGFzeW5jIGdldChwcm9wb3NhbElkKSB7XG4gICAgY29uc3QgYWxsID0gYXdhaXQgdGhpcy5nZXRBbGwoKTtcbiAgICBjb25zdCBwcm9wb3NhbHMgPSBhbGwuZmlsdGVyKHAgPT4gcC5wcm9wb3NhbElkLmVxKEJpZ051bWJlci5mcm9tKHByb3Bvc2FsSWQpKSk7XG4gICAgaWYgKHByb3Bvc2Fscy5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcInByb3Bvc2FsIG5vdCBmb3VuZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHByb3Bvc2Fsc1swXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgQWxsIFByb3Bvc2Fsc1xuICAgKlxuICAgKiBAcmVtYXJrcyBHZXQgYWxsIHRoZSBwcm9wb3NhbHMgaW4gdGhpcyBjb250cmFjdC5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCBwcm9wb3NhbHMgPSBhd2FpdCBjb250cmFjdC5nZXRBbGwoKTtcbiAgICogY29uc29sZS5sb2cocHJvcG9zYWxzKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEByZXR1cm5zIC0gQWxsIHRoZSBwcm9wb3NhbHMgaW4gdGhlIGNvbnRyYWN0LlxuICAgKi9cbiAgYXN5bmMgZ2V0QWxsKCkge1xuICAgIHJldHVybiBQcm9taXNlLmFsbCgoYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZChcImdldEFsbFByb3Bvc2Fsc1wiLCBbXSkpLm1hcChhc3luYyBkYXRhID0+ICh7XG4gICAgICBwcm9wb3NhbElkOiBkYXRhLnByb3Bvc2FsSWQsXG4gICAgICBwcm9wb3NlcjogZGF0YS5wcm9wb3NlcixcbiAgICAgIGRlc2NyaXB0aW9uOiBkYXRhLmRlc2NyaXB0aW9uLFxuICAgICAgc3RhcnRCbG9jazogZGF0YS5zdGFydEJsb2NrLFxuICAgICAgZW5kQmxvY2s6IGRhdGEuZW5kQmxvY2ssXG4gICAgICBzdGF0ZTogYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0LnN0YXRlKGRhdGEucHJvcG9zYWxJZCksXG4gICAgICB2b3RlczogYXdhaXQgdGhpcy5nZXRQcm9wb3NhbFZvdGVzKGRhdGEucHJvcG9zYWxJZCksXG4gICAgICBleGVjdXRpb25zOiBkYXRhWzNdLm1hcCgoYywgaSkgPT4gKHtcbiAgICAgICAgdG9BZGRyZXNzOiBkYXRhLnRhcmdldHNbaV0sXG4gICAgICAgIG5hdGl2ZVRva2VuVmFsdWU6IGMsXG4gICAgICAgIHRyYW5zYWN0aW9uRGF0YTogZGF0YS5jYWxsZGF0YXNbaV1cbiAgICAgIH0pKVxuICAgIH0pKSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSB2b3RlcyBmb3IgYSBzcGVjaWZpYyBwcm9wb3NhbFxuICAgKiBAcGFyYW0gcHJvcG9zYWxJZCAtIHRoZSBwcm9wb3NhbElkXG4gICAqL1xuICBhc3luYyBnZXRQcm9wb3NhbFZvdGVzKHByb3Bvc2FsSWQpIHtcbiAgICBjb25zdCB2b3RlcyA9IGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5wcm9wb3NhbFZvdGVzKHByb3Bvc2FsSWQpO1xuICAgIHJldHVybiBbe1xuICAgICAgdHlwZTogVm90ZVR5cGUuQWdhaW5zdCxcbiAgICAgIGxhYmVsOiBcIkFnYWluc3RcIixcbiAgICAgIGNvdW50OiB2b3Rlcy5hZ2FpbnN0Vm90ZXNcbiAgICB9LCB7XG4gICAgICB0eXBlOiBWb3RlVHlwZS5Gb3IsXG4gICAgICBsYWJlbDogXCJGb3JcIixcbiAgICAgIGNvdW50OiB2b3Rlcy5mb3JWb3Rlc1xuICAgIH0sIHtcbiAgICAgIHR5cGU6IFZvdGVUeXBlLkFic3RhaW4sXG4gICAgICBsYWJlbDogXCJBYnN0YWluXCIsXG4gICAgICBjb3VudDogdm90ZXMuYWJzdGFpblZvdGVzXG4gICAgfV07XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgSWYgV2FsbGV0IFZvdGVkXG4gICAqXG4gICAqIEByZW1hcmtzIENoZWNrIGlmIGEgc3BlY2lmaWVkIHdhbGxldCBoYXMgdm90ZWQgYSBzcGVjaWZpYyBwcm9wb3NhbFxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBqYXZhc2NyaXB0XG4gICAqIC8vIFRoZSBwcm9wb3NhbCBJRCBvZiB0aGUgcHJvcG9zYWwgeW91IHdhbnQgdG8gY2hlY2tcbiAgICogY29uc3QgcHJvcG9zYWxJZCA9IFwiMFwiO1xuICAgKiAvLyBUaGUgYWRkcmVzcyBvZiB0aGUgd2FsbGV0IHlvdSB3YW50IHRvIGNoZWNrIHRvIHNlZSBpZiB0aGV5IHZvdGVkXG4gICAqIGNvbnN0IGFkZHJlc3MgPSBcInt7d2FsbGV0X2FkZHJlc3N9fVwiO1xuICAgKlxuICAgKiBhd2FpdCBjb250cmFjdC5oYXNWb3RlZChwcm9wb3NhbElkLCBhZGRyZXNzKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBwcm9wb3NhbElkIC0gVGhlIHVuaXF1ZSBpZGVudGlmaWVyIG9mIGEgcHJvcG9zYWwgLlxuICAgKiBAcGFyYW0gYWNjb3VudCAtIChvcHRpb25hbCkgd2FsbGV0IGFjY291bnQgYWRkcmVzcy4gRGVmYXVsdHMgdG8gY29ubmVjdGVkIHNpZ25lci5cbiAgICogQHJldHVybnMgLSBUcnVlIGlmIHRoZSBhY2NvdW50IGhhcyBhbHJlYWR5IHZvdGVkIG9uIHRoZSBwcm9wb3NhbC5cbiAgICovXG4gIGFzeW5jIGhhc1ZvdGVkKHByb3Bvc2FsSWQsIGFjY291bnQpIHtcbiAgICBpZiAoIWFjY291bnQpIHtcbiAgICAgIGFjY291bnQgPSBhd2FpdCB0aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRTaWduZXJBZGRyZXNzKCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3QuaGFzVm90ZWQocHJvcG9zYWxJZCwgYXdhaXQgcmVzb2x2ZUFkZHJlc3MoYWNjb3VudCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbiBFeGVjdXRlXG4gICAqXG4gICAqIEByZW1hcmtzIENoZWNrIGlmIGEgcHJvcG9zYWwgY2FuIGJlIGV4ZWN1dGVkIChpZiB0aGUgcHJvcG9zYWwgaGFzIHN1Y2NlZWRlZCkuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gVGhlIHByb3Bvc2FsIElEIG9mIHRoZSBwcm9wb3NhbCB5b3Ugd2FudCB0byBjaGVja1xuICAgKiBjb25zdCBwcm9wb3NhbElkID0gXCIwXCI7XG4gICAqIGNvbnN0IGNhbkV4ZWN1dGUgPSBhd2FpdCBjb250cmFjdC5jYW5FeGVjdXRlKHByb3Bvc2FsSWQpO1xuICAgKiBjb25zb2xlLmxvZyhjYW5FeGVjdXRlKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBwcm9wb3NhbElkIC0gVGhlIHByb3Bvc2FsIElEIHRvIGNoZWNrLlxuICAgKiBAcmV0dXJucyAtIFRydWUgaWYgdGhlIHByb3Bvc2FsIGNhbiBiZSBleGVjdXRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgKi9cbiAgYXN5bmMgY2FuRXhlY3V0ZShwcm9wb3NhbElkKSB7XG4gICAgYXdhaXQgdGhpcy5lbnN1cmVFeGlzdHMocHJvcG9zYWxJZCk7XG4gICAgY29uc3QgcHJvcG9zYWwgPSBhd2FpdCB0aGlzLmdldChwcm9wb3NhbElkKTtcbiAgICBjb25zdCB0b3MgPSBwcm9wb3NhbC5leGVjdXRpb25zLm1hcChwID0+IHAudG9BZGRyZXNzKTtcbiAgICBjb25zdCB2YWx1ZXMgPSBwcm9wb3NhbC5leGVjdXRpb25zLm1hcChwID0+IHAubmF0aXZlVG9rZW5WYWx1ZSk7XG4gICAgY29uc3QgZGF0YXMgPSBwcm9wb3NhbC5leGVjdXRpb25zLm1hcChwID0+IHAudHJhbnNhY3Rpb25EYXRhKTtcbiAgICBjb25zdCBkZXNjcmlwdGlvbkhhc2ggPSB1dGlscy5pZChwcm9wb3NhbC5kZXNjcmlwdGlvbik7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLmNhbGxTdGF0aWMoKS5leGVjdXRlKHRvcywgdmFsdWVzLCBkYXRhcywgZGVzY3JpcHRpb25IYXNoKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgdGhlIGJhbGFuY2Ugb2YgdGhlIHByb2plY3Qgd2FsbGV0IGluIHRoZSBuYXRpdmUgdG9rZW4gb2YgdGhlIGNoYWluXG4gICAqXG4gICAqIEByZXR1cm5zIC0gVGhlIGJhbGFuY2Ugb2YgdGhlIHByb2plY3QgaW4gdGhlIG5hdGl2ZSB0b2tlbiBvZiB0aGUgY2hhaW5cbiAgICovXG4gIGFzeW5jIGJhbGFuY2UoKSB7XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5wcm92aWRlci5nZXRCYWxhbmNlKHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5hZGRyZXNzKTtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogXCJcIixcbiAgICAgIHN5bWJvbDogXCJcIixcbiAgICAgIGRlY2ltYWxzOiAxOCxcbiAgICAgIHZhbHVlOiBiYWxhbmNlLFxuICAgICAgZGlzcGxheVZhbHVlOiB1dGlscy5mb3JtYXRVbml0cyhiYWxhbmNlLCAxOClcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIHRoZSBiYWxhbmNlIG9mIHRoZSBwcm9qZWN0IHdhbGxldCBpbiBhIHBhcnRpY3VsYXJcbiAgICogRVJDMjAgdG9rZW4gY29udHJhY3RcbiAgICpcbiAgICogQHJldHVybnMgLSBUaGUgYmFsYW5jZSBvZiB0aGUgcHJvamVjdCBpbiB0aGUgbmF0aXZlIHRva2VuIG9mIHRoZSBjaGFpblxuICAgKi9cbiAgYXN5bmMgYmFsYW5jZU9mVG9rZW4odG9rZW5BZGRyZXNzKSB7XG4gICAgY29uc3QgZXJjMjAgPSBuZXcgQ29udHJhY3QoYXdhaXQgcmVzb2x2ZUFkZHJlc3ModG9rZW5BZGRyZXNzKSwgRVJDMjBBYmksIHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFByb3ZpZGVyKCkpO1xuICAgIHJldHVybiBhd2FpdCBmZXRjaEN1cnJlbmN5VmFsdWUodGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0UHJvdmlkZXIoKSwgdG9rZW5BZGRyZXNzLCBhd2FpdCBlcmMyMC5iYWxhbmNlT2YodGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0LmFkZHJlc3MpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIGEgcHJvcG9zYWwgYnkgaXRzIGlkLlxuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICogQHBhcmFtIHByb3Bvc2FsSWQgLSBQcm9wb3NhbCB0byBjaGVjayBmb3JcbiAgICovXG4gIGFzeW5jIGVuc3VyZUV4aXN0cyhwcm9wb3NhbElkKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5zdGF0ZShwcm9wb3NhbElkKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aHJvdyBFcnJvcihgUHJvcG9zYWwgJHtwcm9wb3NhbElkfSBub3QgZm91bmRgKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBWb3RlIGNvbnRyYWN0IGNvbmZpZ3VyYXRpb25cbiAgICovXG4gIGFzeW5jIHNldHRpbmdzKCkge1xuICAgIGNvbnN0IFt2b3RpbmdEZWxheSwgdm90aW5nUGVyaW9kLCB2b3RpbmdUb2tlbkFkZHJlc3MsIHZvdGluZ1F1b3J1bUZyYWN0aW9uLCBwcm9wb3NhbFRva2VuVGhyZXNob2xkXSA9IGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3Qudm90aW5nRGVsYXkoKSwgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0LnZvdGluZ1BlcmlvZCgpLCB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3QudG9rZW4oKSwgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0W1wicXVvcnVtTnVtZXJhdG9yKClcIl0oKSwgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0LnByb3Bvc2FsVGhyZXNob2xkKCldKTtcbiAgICBjb25zdCB2b3RpbmdUb2tlbk1ldGFkYXRhID0gYXdhaXQgZmV0Y2hDdXJyZW5jeU1ldGFkYXRhKHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFByb3ZpZGVyKCksIHZvdGluZ1Rva2VuQWRkcmVzcyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZvdGluZ0RlbGF5OiB2b3RpbmdEZWxheS50b1N0cmluZygpLFxuICAgICAgdm90aW5nUGVyaW9kOiB2b3RpbmdQZXJpb2QudG9TdHJpbmcoKSxcbiAgICAgIHZvdGluZ1Rva2VuQWRkcmVzcyxcbiAgICAgIHZvdGluZ1Rva2VuTWV0YWRhdGEsXG4gICAgICB2b3RpbmdRdW9ydW1GcmFjdGlvbjogdm90aW5nUXVvcnVtRnJhY3Rpb24udG9TdHJpbmcoKSxcbiAgICAgIHByb3Bvc2FsVG9rZW5UaHJlc2hvbGQ6IHByb3Bvc2FsVG9rZW5UaHJlc2hvbGQudG9TdHJpbmcoKVxuICAgIH07XG4gIH1cblxuICAvKiogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAqIFdSSVRFIEZVTkNUSU9OU1xuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAvKipcbiAgICogQ3JlYXRlIFByb3Bvc2FsXG4gICAqXG4gICAqIEByZW1hcmtzIENyZWF0ZSBhIG5ldyBwcm9wb3NhbCBmb3IgdG9rZW4gaG9sZGVycyB0byB2b3RlIG9uLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBqYXZhc2NyaXB0XG4gICAqIC8vIFRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgcHJvcG9zYWwgeW91IHdhbnQgdG8gcGFzc1xuICAgKiBjb25zdCBkZXNjcmlwdGlvbiA9IFwiVGhpcyBpcyBhIGdyZWF0IHByb3Bvc2FsIC0gdm90ZSBmb3IgaXQhXCJcbiAgICogLy8gWW91IGNhbiAob3B0aW9uYWxseSkgcGFzcyBpbiBjb250cmFjdCBjYWxscyB0aGF0IHdpbGwgZ2V0IGV4ZWN1dGVkIHdoZW4gdGhlIHByb3Bvc2FsIGlzIGV4ZWN1dGVkLlxuICAgKiBjb25zdCBleGVjdXRpb25zID0gW1xuICAgKiAgIHtcbiAgICogICAgIC8vIFRoZSBjb250cmFjdCB5b3Ugd2FudCB0byBtYWtlIGEgY2FsbCB0b1xuICAgKiAgICAgdG9BZGRyZXNzOiBcIjB4Li4uXCIsXG4gICAqICAgICAvLyBUaGUgYW1vdW50IG9mIHRoZSBuYXRpdmUgY3VycmVuY3kgdG8gc2VuZCBpbiB0aGlzIHRyYW5zYWN0aW9uXG4gICAqICAgICBuYXRpdmVUb2tlblZhbHVlOiAwLFxuICAgKiAgICAgLy8gVHJhbnNhY3Rpb24gZGF0YSB0aGF0IHdpbGwgYmUgZXhlY3V0ZWQgd2hlbiB0aGUgcHJvcG9zYWwgaXMgZXhlY3V0ZWRcbiAgICogICAgIC8vIFRoaXMgaXMgYW4gZXhhbXBsZSB0cmFuc2ZlciB0cmFuc2FjdGlvbiB3aXRoIGEgdG9rZW4gY29udHJhY3QgKHdoaWNoIHlvdSB3b3VsZCBuZWVkIHRvIHNldCB1cCBpbiBjb2RlKVxuICAgKiAgICAgdHJhbnNhY3Rpb25EYXRhOiB0b2tlbkNvbnRyYWN0LmVuY29kZXIuZW5jb2RlKFxuICAgKiAgICAgICBcInRyYW5zZmVyXCIsIFtcbiAgICogICAgICAgICBmcm9tQWRkcmVzcyxcbiAgICogICAgICAgICBhbW91bnQsXG4gICAqICAgICAgIF1cbiAgICogICAgICksXG4gICAqICAgfVxuICAgKiBdXG4gICAqXG4gICAqIGNvbnN0IHByb3Bvc2FsID0gYXdhaXQgY29udHJhY3QucHJvcG9zZShkZXNjcmlwdGlvbiwgZXhlY3V0aW9ucyk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gLSBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHByb3Bvc2FsLlxuICAgKiBAcGFyYW0gZXhlY3V0aW9ucyAtIEEgc2V0IG9mIGV4ZWN1dGFibGUgdHJhbnNhY3Rpb25zIHRoYXQgd2lsbCBiZSBydW4gaWYgdGhlIHByb3Bvc2FsIGlzIHBhc3NlZCBhbmQgZXhlY3V0ZWQuXG4gICAqIEByZXR1cm5zIC0gVGhlIGlkIG9mIHRoZSBjcmVhdGVkIHByb3Bvc2FsIGFuZCB0aGUgdHJhbnNhY3Rpb24gcmVjZWlwdC5cbiAgICovXG4gIHByb3Bvc2UgPSAvKiBAX19QVVJFX18gKi9idWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24oYXN5bmMgKGRlc2NyaXB0aW9uLCBleGVjdXRpb25zKSA9PiB7XG4gICAgaWYgKCFleGVjdXRpb25zKSB7XG4gICAgICBleGVjdXRpb25zID0gW3tcbiAgICAgICAgdG9BZGRyZXNzOiB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3QuYWRkcmVzcyxcbiAgICAgICAgbmF0aXZlVG9rZW5WYWx1ZTogMCxcbiAgICAgICAgdHJhbnNhY3Rpb25EYXRhOiBcIjB4XCJcbiAgICAgIH1dO1xuICAgIH1cbiAgICBjb25zdCB0b3MgPSBleGVjdXRpb25zLm1hcChwID0+IHAudG9BZGRyZXNzKTtcbiAgICBjb25zdCB2YWx1ZXMgPSBleGVjdXRpb25zLm1hcChwID0+IHAubmF0aXZlVG9rZW5WYWx1ZSk7XG4gICAgY29uc3QgZGF0YXMgPSBleGVjdXRpb25zLm1hcChwID0+IHAudHJhbnNhY3Rpb25EYXRhKTtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUNvbnRyYWN0V3JhcHBlcih7XG4gICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgbWV0aG9kOiBcInByb3Bvc2VcIixcbiAgICAgIGFyZ3M6IFt0b3MsIHZhbHVlcywgZGF0YXMsIGRlc2NyaXB0aW9uXSxcbiAgICAgIHBhcnNlOiByZWNlaXB0ID0+IHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSB0aGlzLmNvbnRyYWN0V3JhcHBlci5wYXJzZUxvZ3MoXCJQcm9wb3NhbENyZWF0ZWRcIiwgcmVjZWlwdD8ubG9ncyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaWQ6IGV2ZW50WzBdLmFyZ3MucHJvcG9zYWxJZCxcbiAgICAgICAgICByZWNlaXB0XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBWb3RlXG4gICAqXG4gICAqIEByZW1hcmtzIFZvdGUgb24gYW4gYWN0aXZlIHByb3Bvc2FsXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gVGhlIHByb3Bvc2FsIElEIG9mIHRoZSBwcm9wb3NhbCB5b3Ugd2FudCB0byB2b3RlIG9uXG4gICAqIGNvbnN0IHByb3Bvc2FsSWQgPSBcIjBcIjtcbiAgICogLy8gVGhlIHZvdGUgdHlwZSB5b3Ugd2FudCB0byBjYXN0LCBjYW4gYmUgVm90ZVR5cGUuQWdhaW5zdCwgVm90ZVR5cGUuRm9yLCBvciBWb3RlVHlwZS5BYnN0YWluXG4gICAqIGNvbnN0IHZvdGVUeXBlID0gVm90ZVR5cGUuRm9yO1xuICAgKiAvLyBUaGUgKG9wdGlvbmFsKSByZWFzb24gZm9yIHRoZSB2b3RlXG4gICAqIGNvbnN0IHJlYXNvbiA9IFwiSSBsaWtlIHRoaXMgcHJvcG9zYWwhXCI7XG4gICAqXG4gICAqIGF3YWl0IGNvbnRyYWN0LnZvdGUocHJvcG9zYWxJZCwgdm90ZVR5cGUsIHJlYXNvbik7XG4gICAqIGBgYFxuICAgKiBAcGFyYW0gcHJvcG9zYWxJZCAtIFRoZSBwcm9wb3NhbCB0byBjYXN0IGEgdm90ZSBvbi5cbiAgICogQHBhcmFtIHZvdGVUeXBlIC0gVGhlIHBvc2l0aW9uIHRoZSB2b3RlciBpcyB0YWtpbmcgb24gdGhlaXIgdm90ZS5cbiAgICogQHBhcmFtIHJlYXNvbiAtIChvcHRpb25hbCkgVGhlIHJlYXNvbiBmb3IgdGhlIHZvdGUuXG4gICAqL1xuICB2b3RlID0gLyogQF9fUFVSRV9fICovYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uKCgoKSA9PiB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKHByb3Bvc2FsSWQsIHZvdGVUeXBlKSB7XG4gICAgICBsZXQgcmVhc29uID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBcIlwiO1xuICAgICAgYXdhaXQgX3RoaXMuZW5zdXJlRXhpc3RzKHByb3Bvc2FsSWQpO1xuICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uLmZyb21Db250cmFjdFdyYXBwZXIoe1xuICAgICAgICBjb250cmFjdFdyYXBwZXI6IF90aGlzLmNvbnRyYWN0V3JhcHBlcixcbiAgICAgICAgbWV0aG9kOiBcImNhc3RWb3RlV2l0aFJlYXNvblwiLFxuICAgICAgICBhcmdzOiBbcHJvcG9zYWxJZCwgdm90ZVR5cGUsIHJlYXNvbl1cbiAgICAgIH0pO1xuICAgIH07XG4gIH0pKCkpO1xuXG4gIC8qKlxuICAgKiBFeGVjdXRlIFByb3Bvc2FsXG4gICAqXG4gICAqIEByZW1hcmtzIEV4ZWN1dGUgdGhlIHJlbGF0ZWQgdHJhbnNhY3Rpb25zIGZvciBhIHByb3Bvc2FsIGlmIHRoZSBwcm9wb3NhbCBzdWNjZWVkZWQuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gVGhlIHByb3Bvc2FsIElEIG9mIHRoZSBwcm9wb3NhbCB5b3Ugd2FudCB0byBleGVjdXRlXG4gICAqIGNvbnN0IHByb3Bvc2FsSWQgPSBcIjBcIlxuICAgKiBhd2FpdCBjb250cmFjdC5leGVjdXRlKHByb3Bvc2FsSWQpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHByb3Bvc2FsSWQgLSBUaGUgcHJvcG9zYWwgaWQgdG8gZXhlY3V0ZS5cbiAgICovXG4gIGV4ZWN1dGUgPSAvKiBAX19QVVJFX18gKi9idWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24oYXN5bmMgcHJvcG9zYWxJZCA9PiB7XG4gICAgYXdhaXQgdGhpcy5lbnN1cmVFeGlzdHMocHJvcG9zYWxJZCk7XG4gICAgY29uc3QgcHJvcG9zYWwgPSBhd2FpdCB0aGlzLmdldChwcm9wb3NhbElkKTtcbiAgICBjb25zdCB0b3MgPSBwcm9wb3NhbC5leGVjdXRpb25zLm1hcChwID0+IHAudG9BZGRyZXNzKTtcbiAgICBjb25zdCB2YWx1ZXMgPSBwcm9wb3NhbC5leGVjdXRpb25zLm1hcChwID0+IHAubmF0aXZlVG9rZW5WYWx1ZSk7XG4gICAgY29uc3QgZGF0YXMgPSBwcm9wb3NhbC5leGVjdXRpb25zLm1hcChwID0+IHAudHJhbnNhY3Rpb25EYXRhKTtcbiAgICBjb25zdCBkZXNjcmlwdGlvbkhhc2ggPSB1dGlscy5pZChwcm9wb3NhbC5kZXNjcmlwdGlvbik7XG4gICAgcmV0dXJuIFRyYW5zYWN0aW9uLmZyb21Db250cmFjdFdyYXBwZXIoe1xuICAgICAgY29udHJhY3RXcmFwcGVyOiB0aGlzLmNvbnRyYWN0V3JhcHBlcixcbiAgICAgIG1ldGhvZDogXCJleGVjdXRlXCIsXG4gICAgICBhcmdzOiBbdG9zLCB2YWx1ZXMsIGRhdGFzLCBkZXNjcmlwdGlvbkhhc2hdXG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGFzeW5jIHByZXBhcmUobWV0aG9kLCBhcmdzLCBvdmVycmlkZXMpIHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUNvbnRyYWN0V3JhcHBlcih7XG4gICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgbWV0aG9kLFxuICAgICAgYXJncyxcbiAgICAgIG92ZXJyaWRlc1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgYXN5bmMgY2FsbChmdW5jdGlvbk5hbWUsIGFyZ3MsIG92ZXJyaWRlcykge1xuICAgIHJldHVybiB0aGlzLmNvbnRyYWN0V3JhcHBlci5jYWxsKGZ1bmN0aW9uTmFtZSwgYXJncywgb3ZlcnJpZGVzKTtcbiAgfVxufVxuXG5leHBvcnQgeyBWb3RlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/vote-97cd1378.browser.esm.js\n");

/***/ })

}]);