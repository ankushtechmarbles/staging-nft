"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3314],{89536:(t,r,e)=>{e.d(r,{C:()=>p,G:()=>l,a:()=>h,b:()=>d,d:()=>c,h:()=>i});var a=e(7860),s=e(19578),n=e(61744),o=e(40721);function c(t,r){return(0,a.am)(a.bn.parse(t.abi),r)}function i(t,r){return t in r.readContract.functions}class p{featureName=a.d1.name;constructor(t,r,e){this.contractWrapper=t,this.schema=r,this.storage=e}parseOutputMetadata(t){return this.schema.output.parseAsync(t)}parseInputMetadata(t){return this.schema.input.parseAsync(t)}async get(){let t;if(this.supportsContractMetadata(this.contractWrapper)){const r=await this.contractWrapper.read("contractURI",[]);r&&r.includes("://")&&(t=await this.storage.downloadJSON(r))}if(!t)try{let r,e,s;try{i("name",this.contractWrapper)&&(r=await this.contractWrapper.read("name",[]))}catch(t){}try{i("symbol",this.contractWrapper)&&(e=await this.contractWrapper.read("symbol",[]))}catch(t){}try{s=await(0,a.K)(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options)}catch(t){}t={name:r||s?.name,symbol:e,description:s?.info.title}}catch(t){throw new Error("Could not fetch contract metadata")}return this.parseOutputMetadata(t)}set=(0,s.c)((async t=>{const r=await this._parseAndUploadMetadata(t),e=this.contractWrapper;if(this.supportsContractMetadata(e))return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setContractURI",args:[r],parse:t=>({receipt:t,data:this.get})});throw new a.x(a.d1)}));update=(0,s.c)((async t=>await this.set.prepare({...await this.get(),...t})));async _parseAndUploadMetadata(t){const r=await this.parseInputMetadata(t);return this.storage.upload(r)}supportsContractMetadata(t){return c(t,"ContractMetadata")}}class h{constructor(t){this.contractWrapper=t}addTransactionListener(t){this.contractWrapper.addListener(a.b1.Transaction,t)}removeTransactionListener(t){this.contractWrapper.off(a.b1.Transaction,t)}addEventListener(t,r){const e=this.contractWrapper.readContract.interface.getEvent(t),a={address:this.contractWrapper.address,topics:[this.contractWrapper.readContract.interface.getEventTopic(e)]},s=t=>{const e=this.contractWrapper.readContract.interface.parseLog(t);r(this.toContractEvent(e.eventFragment,e.args,t))};return this.contractWrapper.getProvider().on(a,s),()=>{this.contractWrapper.getProvider().off(a,s)}}listenToAllEvents(t){const r={address:this.contractWrapper.address},e=r=>{try{const e=this.contractWrapper.readContract.interface.parseLog(r);t(this.toContractEvent(e.eventFragment,e.args,r))}catch(t){console.error("Could not parse event:",r,t)}};return this.contractWrapper.getProvider().on(r,e),()=>{this.contractWrapper.getProvider().off(r,e)}}removeEventListener(t,r){const e=this.contractWrapper.readContract.interface.getEvent(t);this.contractWrapper.readContract.off(e.name,r)}removeAllListeners(){this.contractWrapper.readContract.removeAllListeners();const t={address:this.contractWrapper.address};this.contractWrapper.getProvider().removeAllListeners(t)}async getAllEvents(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{fromBlock:0,toBlock:"latest",order:"desc"};const r=(await this.contractWrapper.readContract.queryFilter({},t.fromBlock,t.toBlock)).sort(((r,e)=>"desc"===t.order?e.blockNumber-r.blockNumber:r.blockNumber-e.blockNumber));return this.parseEvents(r)}async getEvents(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{fromBlock:0,toBlock:"latest",order:"desc"};const e=this.contractWrapper.readContract.interface.getEvent(t),a=r.filters?e.inputs.map((t=>r.filters[t.name])):[],s=this.contractWrapper.readContract.filters[e.name](...a),n=(await this.contractWrapper.readContract.queryFilter(s,r.fromBlock,r.toBlock)).sort(((t,e)=>"desc"===r.order?e.blockNumber-t.blockNumber:t.blockNumber-e.blockNumber));return this.parseEvents(n)}parseEvents(t){return t.map((t=>{const r=Object.fromEntries(Object.entries(t).filter((t=>"function"!=typeof t[1]&&"args"!==t[0])));if(t.args){const e=Object.entries(t.args),a=e.slice(e.length/2,e.length),s={};for(const[t,r]of a)s[t]=r;return{eventName:t.event||"",data:s,transaction:r}}return{eventName:t.event||"",data:{},transaction:r}}))}toContractEvent(t,r,e){const a=Object.fromEntries(Object.entries(e).filter((t=>"function"!=typeof t[1]&&"args"!==t[0]))),s={};return t.inputs.forEach(((t,e)=>{if(Array.isArray(r[e])){const a=t.components;if(a){const n=r[e];if("tuple[]"===t.type){const r=[];for(let t=0;t<n.length;t++){const e=n[t],s={};for(let t=0;t<a.length;t++){s[a[t].name]=e[t]}r.push(s)}s[t.name]=r}else{const r={};for(let t=0;t<a.length;t++){r[a[t].name]=n[t]}s[t.name]=r}}}else s[t.name]=r[e]})),{eventName:t.name,data:s,transaction:a}}}class l{constructor(t){this.contractWrapper=t}async gasCostOf(t,r){const[e,a]=await Promise.all([this.contractWrapper.getProvider().getGasPrice(),this.contractWrapper.estimateGas(t,r)]);return n.formatEther(a.mul(e))}async gasLimitOf(t,r){return this.contractWrapper.estimateGas(t,r)}async currentGasPriceInGwei(){const t=await this.contractWrapper.getProvider().getGasPrice();return n.formatUnits(t,"gwei")}}class d{featureName=a.d2.name;constructor(t,r,e){this.contractWrapper=t,this.metadata=r,this.storage=e}async get(){return c(this.contractWrapper,"AppURI")?await this.contractWrapper.read("appURI",[]):(0,o.ov)((await this.metadata.get()).app_uri||"",this.storage.getGatewayUrls())}set=(0,s.c)((async t=>c(this.contractWrapper,"AppURI")?s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAppURI",args:[t]}):await this.metadata.update.prepare({app_uri:t})))}},52153:(t,r,e)=>{e.d(r,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},74935:(t,r,e)=>{e.d(r,{C:()=>i});var a=e(38776),s=e(7860),n=e(89536),o=e(19578),c=e(68828);class i{featureName=s.d3.name;constructor(t,r){this.contractWrapper=t,this.roles=r}async getAll(){(0,a.Z)(this.roles.length,"this contract has no support for roles");const t={},r=Object.entries(this.roles);return(await Promise.all(r.map((t=>{let[,r]=t;return this.get(r)})))).forEach(((e,a)=>t[r[a][1]]=e)),t}async get(t){(0,a.Z)(this.roles.includes(t),`this contract does not support the "${t}" role`);const r=this.contractWrapper;if((0,n.h)("getRoleMemberCount",r)&&(0,n.h)("getRoleMember",r)){const e=(0,s.H)(t),a=(await r.read("getRoleMemberCount",[e])).toNumber();return await Promise.all(Array.from(Array(a).keys()).map((t=>r.read("getRoleMember",[e,t]))))}throw new Error("Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.")}setAll=(0,o.c)((async t=>{const r=new c.C(this.contractWrapper),e=Object.keys(t);(0,a.Z)(e.length,"you must provide at least one role to set"),(0,a.Z)(e.every((t=>this.roles.includes(t))),"this contract does not support the given role");const n=await this.getAll(),i=[],p=e.sort((t=>"admin"===t?1:-1));for(let e=0;e<p.length;e++){const a=p[e],[o,c]=await Promise.all([Promise.all(t[a]?.map((t=>(0,s.aP)(t)))||[]),Promise.all(n[a]?.map((t=>(0,s.aP)(t)))||[])]),h=o.filter((t=>!c.includes(t))),l=c.filter((t=>!o.includes(t)));if(h.length&&h.forEach((t=>{i.push(r.encode("grantRole",[(0,s.H)(a),t]))})),l.length){(await Promise.all(l.map((t=>this.getRevokeRoleFunctionName(t))))).forEach(((t,e)=>i.push(r.encode(t,[(0,s.H)(a),l[e]]))))}}return o.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[i]})}));async verify(t,r){await Promise.all(t.map((async t=>{const[e,a]=await Promise.all([this.get(t),(0,s.aP)(r)]);if(!e.map((t=>t.toLowerCase())).includes(a.toLowerCase()))throw new s.o(a,t)})))}grant=(0,o.c)((async(t,r)=>{(0,a.Z)(this.roles.includes(t),`this contract does not support the "${t}" role`);const e=await(0,s.aP)(r);return o.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"grantRole",args:[(0,s.H)(t),e]})}));revoke=(0,o.c)((async(t,r)=>{(0,a.Z)(this.roles.includes(t),`this contract does not support the "${t}" role`);const e=await(0,s.aP)(r),n=await this.getRevokeRoleFunctionName(e);return o.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:n,args:[(0,s.H)(t),e]})}));async getRevokeRoleFunctionName(t){const[r,e]=await Promise.all([(0,s.aP)(t),this.contractWrapper.getSignerAddress()]);return e.toLowerCase()===r.toLowerCase()?"renounceRole":"revokeRole"}}},93314:(t,r,e)=>{e.r(r),e.d(r,{Split:()=>l});var a=e(2593),s=e(64146),n=e(68828),o=e(7860),c=e(19578),i=e(89536),p=e(52153),h=e(74935);e(13550),e(77191),e(54146);class l{static contractRoles=o.dF;get chainId(){return this._chainId}constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,c=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new o.cu(t,r,s,a,e);this._chainId=c,this.abi=o.bn.parse(s||[]),this.contractWrapper=d,this.storage=e,this.metadata=new i.C(this.contractWrapper,o.c9,this.storage),this.app=new i.b(this.contractWrapper,this.metadata,this.storage),this.roles=new h.C(this.contractWrapper,l.contractRoles),this.encoder=new n.C(this.contractWrapper),this.estimator=new i.G(this.contractWrapper),this.events=new i.a(this.contractWrapper),this.interceptor=new p.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAllRecipients(){const t=[];let r=a.O$.from(0);const e=await this.contractWrapper.read("payeeCount",[]);for(;r.lt(e);)try{const e=await this.contractWrapper.read("payee",[r]);t.push(await this.getRecipientSplitPercentage(e)),r=r.add(1)}catch(t){if("method"in t&&t.method.toLowerCase().includes("payee(uint256)"))break;throw t}return t}async balanceOfAllRecipients(){const t=await this.getAllRecipients(),r={};for(const e of t)r[e.address]=await this.balanceOf(e.address);return r}async balanceOfTokenAllRecipients(t){const[r,e]=await Promise.all([(0,o.aP)(t),this.getAllRecipients()]),a={};for(const t of e)a[t.address]=await this.balanceOfToken(t.address,r);return a}async balanceOf(t){const[r,e,a]=await Promise.all([(0,o.aP)(t),this.contractWrapper.getProvider().getBalance(this.getAddress()),this.contractWrapper.read("totalReleased",[])]),s=e.add(a);return this._pendingPayment(r,s,await this.contractWrapper.read("released",[r]))}async balanceOfToken(t,r){const[a,c]=await Promise.all([(0,o.aP)(r),(0,o.aP)(t)]),i=(await Promise.resolve().then(e.t.bind(e,49242,19))).default,p=new s.CH(a,i,this.contractWrapper.getProvider()),[h,l,d]=await Promise.all([p.balanceOf(this.getAddress()),this.contractWrapper.read("totalReleased",[a]),this.contractWrapper.read("released",[a,c])]),m=h.add(l),u=await this._pendingPayment(c,m,d);return await(0,n.a)(this.contractWrapper.getProvider(),a,u)}async getRecipientSplitPercentage(t){const[r,e,s]=await Promise.all([(0,o.aP)(t),this.contractWrapper.read("totalShares",[]),this.contractWrapper.read("shares",[t])]);return{address:r,splitPercentage:s.mul(a.O$.from(1e7)).div(e).toNumber()/1e5}}withdraw=(0,c.c)((async t=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address)",args:[await(0,o.aP)(t)]})));withdrawToken=(0,c.c)((async(t,r)=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address,address)",args:await Promise.all([(0,o.aP)(r),(0,o.aP)(t)])})));distribute=(0,c.c)((async()=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute()",args:[]})));distributeToken=(0,c.c)((async t=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute(address)",args:[await(0,o.aP)(t)]})));async _pendingPayment(t,r,e){const[a,s]=await Promise.all([(0,o.aP)(t),this.contractWrapper.read("totalShares",[])]);return r.mul(await this.contractWrapper.read("shares",[a])).div(s).sub(e)}async prepare(t,r,e){return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}}}]);
//# sourceMappingURL=3314.js.map