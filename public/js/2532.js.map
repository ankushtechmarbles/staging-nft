{"version":3,"file":"js/2532.js","mappings":"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","sources":["webpack:///./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/dist/errors-3055a99c.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/dist/url-bc88b2b6.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","function normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { getValidChainRPCs } from '@thirdweb-dev/chains';\n\nfunction isTwUrl(url) {\n  const host = new URL(url).hostname;\n  return host.endsWith(\".thirdweb.com\") || host === \"localhost\" || host === \"0.0.0.0\";\n}\nfunction getValidPublicRPCUrl(chain) {\n  return getValidChainRPCs(chain).map(rpc => {\n    try {\n      const url = new URL(rpc);\n      // remove client id from url\n      if (url.hostname.endsWith(\".thirdweb.com\")) {\n        url.pathname = \"\";\n        url.search = \"\";\n      }\n      return url.toString();\n    } catch (e) {\n      return rpc;\n    }\n  });\n}\n\nexport { getValidPublicRPCUrl as g, isTwUrl as i };\n","import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-006a648a.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { U as UserRejectedRequestError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-3055a99c.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nvar _client = /*#__PURE__*/new WeakMap();\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nclass CoinbaseWalletConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.coinbase);\n    _defineProperty(this, \"name\", \"Coinbase Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        try {\n          const chain = await this.switchChain(chainId);\n          id = chain.chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`Connected but failed to switch to desired chain ${chainId}`, e);\n        }\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found\");\n    }\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\n      // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n      if (typeof CoinbaseWalletSDK !== \"function\" &&\n      // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === \"function\") {\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      }\n      _classPrivateFieldSet(this, _client, new CoinbaseWalletSDK(this.options));\n      const walletExtensionChainId = _classPrivateFieldGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(chain_ => this.options.chainId ? chain_.chainId === this.options.chainId : chain_.chainId === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.chainId;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpc[0];\n      _classPrivateFieldSet(this, _provider, _classPrivateFieldGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${id}`,\n        slug: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        testnet: false,\n        chain: \"ethereum\",\n        shortName: \"eth\"\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, addError)) {\n            throw new UserRejectedRequestError(addError);\n          }\n          throw new AddChainError();\n        }\n      }\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async getQrUrl() {\n    await this.getProvider();\n    if (!_classPrivateFieldGet(this, _client)) {\n      throw new Error(\"Coinbase Wallet SDK not initialized\");\n    }\n    return _classPrivateFieldGet(this, _client).getQrUrl();\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\n\nexport { CoinbaseWalletConnector };\n"],"names":["WagmiConnector","constructor","_ref","chains","options","super","this","getBlockExplorerUrls","chain","explorers","map","x","url","length","undefined","isChainUnsupported","chainId","some","updateChains","RpcError","Error","message","cause","code","data","Number","isInteger","JSON","stringify","ProviderRpcError","AddChainError","arguments","_","ChainNotConfiguredError","connectorId","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError","normalizeChainId","parseInt","trim","substring","isTwUrl","host","URL","hostname","endsWith","getValidPublicRPCUrl","rpc","pathname","search","toString","e","_client","WeakMap","_provider","_isUserRejectedRequestError","WeakSet","CoinbaseWalletConnector","W","reloadOnDisconnect","w","coinbase","writable","value","accounts","emit","account","id","n","unsupported","connect","provider","getProvider","setupListeners","type","enable","getChainId","switchChain","console","error","test","U","disconnect","removeListener","onAccountsChanged","onChainChanged","onDisconnect","close","getAccount","request","method","CoinbaseWalletSDK","default","walletExtensionChainId","walletExtension","find","chain_","jsonRpcUrl","makeWeb3Provider","getSigner","Promise","all","isAuthorized","params","name","slug","nativeCurrency","decimals","symbol","testnet","shortName","C","chainName","rpcUrls","g","blockExplorerUrls","addError","_isUserRejectedRequestError2","call","A","S","on","getQrUrl"],"sourceRoot":""}