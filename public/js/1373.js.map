{"version":3,"file":"js/1373.js","mappings":"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","sources":["webpack:///./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/dist/errors-3055a99c.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/dist/url-bc88b2b6.browser.esm.js","webpack:///./node_modules/@thirdweb-dev/wallets/evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","function normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { getValidChainRPCs } from '@thirdweb-dev/chains';\n\nfunction isTwUrl(url) {\n  const host = new URL(url).hostname;\n  return host.endsWith(\".thirdweb.com\") || host === \"localhost\" || host === \"0.0.0.0\";\n}\nfunction getValidPublicRPCUrl(chain) {\n  return getValidChainRPCs(chain).map(rpc => {\n    try {\n      const url = new URL(rpc);\n      // remove client id from url\n      if (url.hostname.endsWith(\".thirdweb.com\")) {\n        url.pathname = \"\";\n        url.search = \"\";\n      }\n      return url.toString();\n    } catch (e) {\n      return rpc;\n    }\n  });\n}\n\nexport { getValidPublicRPCUrl as g, isTwUrl as i };\n","import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-3055a99c.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nvar _provider = /*#__PURE__*/new WeakMap();\nclass FrameConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options: suppliedOptions,\n      connectorStorage\n    } = _ref;\n    const options = {\n      shimDisconnect: true,\n      ...suppliedOptions\n    };\n    super({\n      chains,\n      options\n    });\n    _defineProperty(this, \"id\", \"frame\");\n    _defineProperty(this, \"name\", \"Frame\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"shimDisconnectKey\", `${this.id}.shimDisconnect`);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n      // Remove shim signalling wallet is disconnected\n      if (this.options.shimDisconnect) {\n        this.connectorStorage.removeItem(this.shimDisconnectKey);\n      }\n    });\n    this.connectorStorage = connectorStorage;\n  }\n  async connect(config) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (config?.chainId && id !== config?.chainId) {\n        const chain = await this.switchChain(config?.chainId);\n        id = chain.chainId;\n        unsupported = this.isChainUnsupported(id);\n      }\n\n      // Add shim to storage signalling wallet is connected\n      if (this.options.shimDisconnect) {\n        this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      return {\n        account,\n        provider,\n        chain: {\n          id,\n          unsupported\n        }\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) {\n      return;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (!this.isInjected()) {\n      provider.close();\n    }\n\n    // Remove shim signalling wallet is disconnected\n    if (this.options.shimDisconnect) {\n      this.connectorStorage.removeItem(this.shimDisconnectKey);\n    }\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    return normalizeChainId(chainId);\n  }\n  async getProvider() {\n    _classPrivateFieldSet(this, _provider, this.isInjected() ? this.injectedProvider() : await this.createProvider());\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  /**\n   * get a `signer` for given `chainId`\n   */\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n\n    // ethers.providers.Web3Provider\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect &&\n      // If shim does not exist in storage, wallet is disconnected\n      !this.connectorStorage.getItem(this.shimDisconnectKey)) {\n        return false;\n      }\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      await Promise.all([provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      }), new Promise(res => this.on(\"change\", _ref2 => {\n        let {\n          chain\n        } = _ref2;\n        if (chain?.id === chainId) {\n          res();\n        }\n      }))]);\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        slug: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        chain: \"\",\n        shortName: \"\",\n        testnet: true\n      };\n    } catch (switchChainError) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (switchChainError.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: chainIdHex,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          const currentChainId = await this.getChainId();\n          if (currentChainId !== chainId) {\n            throw new UserRejectedRequestError(new Error(\"User rejected switch after adding network.\"));\n          }\n          return chain;\n        } catch (addChainError) {\n          // if user rejects request to add chain\n          if (this.isUserRejectedRequestError(addChainError)) {\n            throw new UserRejectedRequestError(addChainError);\n          }\n\n          // else other error\n          throw new AddChainError(addChainError.message);\n        }\n      }\n\n      // if user rejects request to switch chain\n      if (this.isUserRejectedRequestError(switchChainError)) {\n        throw new UserRejectedRequestError(switchChainError);\n      }\n\n      // else other error\n      throw new SwitchChainError(switchChainError);\n    }\n  }\n  async watchAsset(_ref3) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref3;\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n  injectedProvider() {\n    return window?.ethereum;\n  }\n  isInjected() {\n    return !!this.injectedProvider()?.isFrame;\n  }\n  async createProvider() {\n    const ethProvider = (await import('eth-provider')).default;\n    return ethProvider(\"frame\");\n  }\n}\n\nexport { FrameConnector };\n"],"names":["WagmiConnector","constructor","_ref","chains","options","super","this","getBlockExplorerUrls","chain","explorers","map","x","url","length","undefined","isChainUnsupported","chainId","some","updateChains","RpcError","Error","message","cause","code","data","Number","isInteger","JSON","stringify","ProviderRpcError","AddChainError","arguments","_","ChainNotConfiguredError","connectorId","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError","normalizeChainId","parseInt","trim","substring","isTwUrl","host","URL","hostname","endsWith","getValidPublicRPCUrl","rpc","pathname","search","toString","e","_provider","WeakMap","FrameConnector","W","suppliedOptions","connectorStorage","shimDisconnect","id","writable","value","accounts","emit","account","n","unsupported","removeItem","shimDisconnectKey","connect","config","provider","getProvider","setupListeners","type","request","method","getChainId","switchChain","setItem","error","isUserRejectedRequestError","U","R","disconnect","removeListener","onAccountsChanged","onChainChanged","onDisconnect","isInjected","close","getAccount","injectedProvider","createProvider","getSigner","Promise","all","isAuthorized","getItem","chainIdHex","params","res","on","_ref2","find","name","slug","nativeCurrency","decimals","symbol","shortName","testnet","switchChainError","C","chainName","rpcUrls","g","blockExplorerUrls","addChainError","A","S","watchAsset","_ref3","address","image","window","ethereum","isFrame","ethProvider","default"],"sourceRoot":""}