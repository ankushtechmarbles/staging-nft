import{av as g,aw as i,ax as f,aQ as w,az as m,aF as v,aG as y,aR as L,aS as W,aD as C,aH as A,aI as S,aN as l,aT as h,aU as d,aV as c,aM as u,aW as B,aX as T,aY as b}from"./index.c3f8b9a9.js";class p{get chainId(){return this._chainId}constructor(e,t,r){let a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,n=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new g(e,t,s,a);i(this,"abi",void 0),i(this,"contractWrapper",void 0),i(this,"storage",void 0),i(this,"encoder",void 0),i(this,"events",void 0),i(this,"estimator",void 0),i(this,"platformFees",void 0),i(this,"metadata",void 0),i(this,"roles",void 0),i(this,"interceptor",void 0),i(this,"direct",void 0),i(this,"auction",void 0),i(this,"_chainId",void 0),i(this,"getAll",this.getAllListings),this._chainId=o,this.abi=s,this.contractWrapper=n,this.storage=r,this.metadata=new f(this.contractWrapper,w,this.storage),this.roles=new m(this.contractWrapper,p.contractRoles),this.encoder=new v(this.contractWrapper),this.estimator=new y(this.contractWrapper),this.direct=new L(this.contractWrapper,this.storage),this.auction=new W(this.contractWrapper,this.storage),this.events=new C(this.contractWrapper),this.platformFees=new A(this.contractWrapper),this.interceptor=new S(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getListing(e){const t=await this.contractWrapper.readContract.listings(e);if(t.assetContract===l)throw new h(this.getAddress(),e.toString());switch(t.listingType){case d.Auction:return await this.auction.mapListing(t);case d.Direct:return await this.direct.mapListing(t);default:throw new Error(`Unknown listing type: ${t.listingType}`)}}async getActiveListings(e){const t=await this.getAllListingsNoFilter(!0),r=this.applyFilter(t,e),a=c.from(Math.floor(Date.now()/1e3));return r.filter(s=>s.type===d.Auction&&c.from(s.endTimeInEpochSeconds).gt(a)&&c.from(s.startTimeInEpochSeconds).lte(a)||s.type===d.Direct&&s.quantity>0)}async getAllListings(e){const t=await this.getAllListingsNoFilter(!1);return this.applyFilter(t,e)}async getTotalCount(){return await this.contractWrapper.readContract.totalListings()}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.readContract.hasRole(u("lister"),l)}async getBidBufferBps(){return this.contractWrapper.readContract.bidBufferBps()}async getTimeBufferInSeconds(){return this.contractWrapper.readContract.timeBuffer()}async getOffers(e){const r=(await this.events.getEvents("NewOffer")).filter(s=>s.data.listingId.eq(e));return await Promise.all(r.map(async s=>await B(this.contractWrapper.getProvider(),c.from(e),{quantityWanted:s.data.quantityWanted,pricePerToken:s.data.totalOfferAmount.div(s.data.quantityWanted),currency:s.data.currency,offeror:s.data.offeror})))}async buyoutListing(e,t,r){const a=await this.contractWrapper.readContract.listings(e);if(a.listingId.toString()!==e.toString())throw new h(this.getAddress(),e.toString());switch(a.listingType){case d.Direct:return T(t!==void 0,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing(e,t,r);case d.Auction:return await this.auction.buyoutListing(e);default:throw Error(`Unknown listing type: ${a.listingType}`)}}async setBidBufferBps(e){await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const t=await this.getTimeBufferInSeconds();await this.contractWrapper.sendTransaction("setAuctionBuffers",[t,c.from(e)])}async setTimeBufferInSeconds(e){await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const t=await this.getBidBufferBps();await this.contractWrapper.sendTransaction("setAuctionBuffers",[c.from(e),t])}async allowListingFromSpecificAssetOnly(e){const t=[];(await this.roles.get("asset")).includes(l)&&t.push(this.encoder.encode("revokeRole",[u("asset"),l])),t.push(this.encoder.encode("grantRole",[u("asset"),e])),await this.contractWrapper.multiCall(t)}async allowListingFromAnyAsset(){const e=[],t=await this.roles.get("asset");for(const r in t)e.push(this.encoder.encode("revokeRole",[u("asset"),r]));e.push(this.encoder.encode("grantRole",[u("asset"),l])),await this.contractWrapper.multiCall(e)}async getAllListingsNoFilter(e){return(await Promise.all(Array.from(Array((await this.contractWrapper.readContract.totalListings()).toNumber()).keys()).map(async r=>{let a;try{a=await this.getListing(r)}catch(s){if(s instanceof h)return;console.warn(`Failed to get listing ${r}' - skipping. Try 'marketplace.getListing(${r})' to get the underlying error.`);return}if(a.type===d.Auction)return a;if(e){const{valid:s}=await this.direct.isStillValidListing(a);if(!s)return}return a}))).filter(r=>r!==void 0)}applyFilter(e,t){let r=[...e];const a=c.from(t?.start||0).toNumber(),s=c.from(t?.count||b).toNumber();return t&&(t.seller&&(r=r.filter(o=>{var n;return o.sellerAddress.toString().toLowerCase()===(t==null||(n=t.seller)===null||n===void 0?void 0:n.toString().toLowerCase())})),t.tokenContract&&(r=r.filter(o=>{var n;return o.assetContractAddress.toString().toLowerCase()===(t==null||(n=t.tokenContract)===null||n===void 0?void 0:n.toString().toLowerCase())})),t.tokenId!==void 0&&(r=r.filter(o=>{var n;return o.tokenId.toString()===(t==null||(n=t.tokenId)===null||n===void 0?void 0:n.toString())})),r=r.filter((o,n)=>n>=a),r=r.slice(0,s)),r}async call(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),a=1;a<t;a++)r[a-1]=arguments[a];return this.contractWrapper.call(e,...r)}}i(p,"contractRoles",["admin","lister","asset"]);export{p as Marketplace};
