input[type=checkbox] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    -webkit-tap-highlight-color: transparent;
    cursor: pointer;
}
input[type=checkbox]:focus {
    outline: 0;
}

.toggle {
    height: 32px;
    width: 108px;
    border-radius: 20px;
    display: inline-block;
    position: relative;
    margin: 0;
    background: #FFFFFF;
    box-shadow: 0px 0px 6px 1px rgba(255, 255, 255, 0.30);
    transition: all 0.2s ease;
    font-family: Barlow, serif;
}

.toggle:before {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    left: 15px;
    top: -1px;
    position: relative;
    text-align: right;
    font-size: 12px;
    font-family: Barlow, serif;
    color: black;
    font-weight: normal;
    content: "LIGHT MODE"
}

.toggle:after {
    content: "";
    position: absolute;
    top: 4px;
    left: 4px;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: #FFFFFF;
    background-image: url("/image/icons/idealabs-hud-topRight-colorthemeMode-light-icon-00.svg");
    background-repeat: no-repeat;
    background-position: center;
    transition: all 0.2s cubic-bezier(0.5, 0.1, 0.75, 1.35);
}
.toggle:checked:after {
    content: '';
    color: white;
    background: #232323;
    top: 4px;
    left: 38px;
    background-image: url("/image/icons/idealabs-hud-topRight-colorthemeMode-dark-icon-00.svg");
    background-repeat: no-repeat;
    background-position: center;
}

.toggle:checked:before {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    left: -10px;
    top: -1px;
    position: relative;
    text-align: right;
    font-size: 12px;
    font-family: Barlow, serif;
    font-weight: normal;
    color: black;
    content: "DARK MODE"
}


.toggle:checked {
    background: #BBB;
    color: black;
}

.toggle:checked:after {
    transform: translatex(42px);
}

.webcam > video {
    border-radius: 361px;
}

.link-react {
    color: #C1C1C1;
    text-decoration: underline;
    text-align: center;
    font-family: Barlow;
    font-size: 18px;
    font-style: normal;
    font-weight: 300;
    line-height: normal;
}

.form-control {
    height: 52px !important;
    border-radius: 10px !important;
    border: 2px solid #565656 !important;
    opacity: 0.69 !important;
    background: #626262 !important;
    color: white;
}

.form-control::placeholder {
    color: #C8C8C8 !important;
}

.form-control-select {
    height: 52px !important;
    flex-shrink: 0 !important;
    width: 100%;
    border-radius: 10px !important;
    border: 2px solid #565656 !important;
    opacity: 0.78 !important;
    background: #626262 !important;
    color: #C8C8C8 !important;
}

.form-control-select::placeholder {
    color: #C8C8C8 !important;
}

.form-control:focus {
    border: 2px solid #575757 !important;
    opacity: 0.88 !important;
    background: linear-gradient(180deg, #121111 0%, rgba(18, 17, 17, 0.00) 161.54%) !important;
}

.avatar-canvas {
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 0;
    transition: all 0.5s ease;
    pointer-events: all;
    cursor: grab;
}

.avatar-canvas:active {
    cursor: grabbing;
}


/* create rotation class */
.rotate-clockwise {
    -webkit-animation: rotate 2s linear infinite;
    -moz-animation: rotate 2s linear infinite;
    -ms-animation: rotate 2s linear infinite;
    -o-animation: rotate 2s linear infinite;
    animation: rotate 2s linear infinite;

    transform-origin: center center;
}

/* create keyframes for rotation */
@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(-360deg);
    }
}

.rotate-counter-clockwise {
    /*start flipped*/
    transform: translate(-50%, -50%) rotate(180deg);
    position: absolute;
    top: 0;
    -webkit-animation: rotate-counter-clockwise 1.5s linear infinite reverse;
    -moz-animation: rotate-counter-clockwise 1.5s linear infinite reverse;
    -ms-animation: rotate-counter-clockwise 1.5s linear infinite reverse;
    -o-animation: rotate-counter-clockwise 1.5s linear infinite reverse;
    animation: rotate-counter-clockwise 1.5s linear infinite reverse;

    transform-origin: center center;
}

/* create keyframes for rotation */
@keyframes rotate-counter-clockwise {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(-360deg);
    }
}
